{"version":3,"sources":["Todo.js","TodoList.js","Header.jsx","ClearButtons.jsx","App.js","theme.js","index.js"],"names":["Todo","todo","toggleTodo","selectOnlyThis","updateTodo","useState","value","name","newName","setNewName","style","whiteSpace","overflow","width","fontSize","Checkbox","marginBottom","checked","complete","onChange","id","Input","readOnly","selected","onDoubleClick","type","disableUnderline","event","target","onKeyDown","key","preventDefault","stopPropagation","TodoList","todos","deselectTodo","map","Header","todoHistory","setTodoHistory","setTodos","handleUndo","length","slice","AppBar","position","Toolbar","Typography","flex","variant","IconButton","aria-label","opacity","ClearButtons","handleClearDoneTodos","handleClearAllTodos","handleShowDblTapMsg","Grid","item","container","marginTop","Button","backgroundColor","startIcon","onClick","LOCAL_STORAGE_KEY","App","nameRef","useRef","handleAddTodo","eventProperty","current","trim","prevTodos","uuidv4","todoID","newTodos","i","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","Paper","className","direction","xs","sm","display","ref","onPaste","navigator","clipboard","readText","then","clipText","includes","split","forEach","addPastedList","color","find","updatedName","isSelected","isComplete","firstHalf","middle","secondHalf","filter","remainingStr","join","writeText","darkTheme","createMuiTheme","palette","primary","pink","secondary","blue","ReactDOM","render","StrictMode","ThemeProvider","theme","document","getElementById"],"mappings":"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","file":"static/js/main.01ebeeba.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Checkbox, Input } from \"@material-ui/core\";\n\n//followed this tutorial for maintaining recommended controlled components: https://reactjs.org/docs/forms.html#controlled-components\nexport default function Todo({ todo, toggleTodo, selectOnlyThis, updateTodo }) {\n    //made change-on-double-click functionality based on this resource: https://flaviocopes.com/react-edit-doubleclick/\n    const [newName, setNewName] = useState({value: todo.name});\n\n    function handleDblClick() {\n        // setNewName({value: todo.name});\n        selectOnlyThis(todo.id); //iterate through todos and set all selected to false, except this todo.\n    }\n\n    const handleEditText = (event) => {\n        //An onChange event handler returns a Synthetic Event object which contains useful meta data such as the target inputâ€™s id, name, and current value.\n        setNewName({value: event.target.value});\n    }\n\n    function handleTodoClick() {\n        toggleTodo(todo.id);\n    }\n    \n    return (\n        <div style={{  \n            whiteSpace: \"nowrap\",\n            overflow: \"auto\",\n            width: \"100%\",\n            fontSize: \"20px\"}}>\n                <label>\n                    <Checkbox style={{width: \"10%\", marginBottom: \"4px\"}} checked={todo.complete} onChange={handleTodoClick} />\n                    <Input\n                        style={{width: \"80%\", fontSize: \"20px\"}}\n                        readOnly={!todo.selected}\n                        onDoubleClick={handleDblClick}\n                        type='text'\n                        disableUnderline={!todo.selected}\n                        value={newName.value}\n                        onChange={handleEditText}\n                        onKeyDown={(event) => {\n                            if (event.key === 'Enter' || event.key === 'Escape') {\n                            selectOnlyThis();\n                            updateTodo(newName.value, todo);\n                            event.preventDefault(); //prevents a browser reload/refresh??\n                            event.stopPropagation(); //Prevents the event from bubbling up the DOM, but does not stop the browsers default behaviour.\n                            }\n                        }}\n                    />\n                </label>\n            \n        </div>\n    )\n}","import React from 'react'\nimport Todo from './Todo'\n\nexport default function TodoList({ todos, toggleTodo, selectOnlyThis, deselectTodo, updateTodo }) {\n    return (\n        todos.map(todo => {\n            return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} selectOnlyThis={selectOnlyThis} updateTodo={updateTodo} />\n        })\n    )\n}","import React from \"react\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport UndoIcon from '@material-ui/icons/Undo';\n\n\n\nconst Header = ({todoHistory, setTodoHistory, setTodos, selectOnlyThis}) => {\n\n    function handleUndo() {\n        selectOnlyThis();\n        //todoHistory is an array of all todos excluding the current.\n        if (todoHistory.length >= 1) {\n            // console.log(\"handleUndo: setting todo history\");\n            setTodoHistory(todoHistory.slice(0, todoHistory.length - 1));\n            setTodos(todoHistory[todoHistory.length - 1]);\n\n        }\n        \n    }\n\n    return (\n        // static makes app bar  always be at the top, and prevents other content from being hidden underneath it.\n        // If you do this, give a margin of 0 to html body\n        <AppBar position=\"fixed\">\n            <Toolbar>\n                <Typography style={{flex: \"1\"}} variant=\"h4\" >Groceries</Typography>\n                {todoHistory.length > 0 ? (\n                    <IconButton onDoubleClick={handleUndo} aria-label=\"undo\">\n                        <UndoIcon />\n                        <Typography variant=\"body1\">Undo</Typography>\n                    </IconButton>\n                ) : (\n                    <IconButton style={{opacity: \"0.6\"}} onDoubleClick={handleUndo} aria-label=\"undo\">\n                        <UndoIcon />\n                        <Typography variant=\"body1\">Undo</Typography>\n                    </IconButton>\n                )}\n\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Header;","import React from \"react\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { Button, Grid} from \"@material-ui/core\";\n\nfunction ClearButtons({handleClearDoneTodos, handleClearAllTodos, handleShowDblTapMsg}) {\n    return (\n        <Grid item container style={{marginTop: \"2vh\"}} >\n            <Button style={{backgroundColor: \"#696969\"}} variant=\"outlined\" startIcon={<DeleteOutlineIcon />} onDoubleClick={handleClearDoneTodos} onClick={handleShowDblTapMsg}>Clear Ticked</Button>\n            <Button style={{backgroundColor: \"#696969\"}} variant=\"outlined\" startIcon={<DeleteIcon />} onDoubleClick={handleClearAllTodos} onClick={handleShowDblTapMsg}>Clear All</Button>\n        </Grid>\n    );\n\n\n}\n\nexport default ClearButtons;","// Allow double tap to change item name, if you wanna edit the quantities for example. You click out of the item to save. If you leave the item blank, it is deleted when you click out of it.\n\n//pra botar background image com opacity and full size, look at your survey form project\n\n\n\nimport React, { useState, useRef, useEffect } from 'react'\nimport './App.css'\nimport TodoList from './TodoList'\nimport {v4 as uuidv4} from 'uuid'\nimport { Button, Typography, Paper, Grid} from \"@material-ui/core\";\nimport Header from \"./Header\";\nimport AddIcon from '@material-ui/icons/Add';\nimport ClearButtons from \"./ClearButtons\";\n\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n\n  const [todos, setTodos] = useState([]);\n  const [todoHistory, setTodoHistory] = useState([]);\n  const nameRef = useRef(); //will give us access to input element\n\n  //only runs when mounted\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, [])\n\n  //runs when mounted (I think?) and every time todos is updated\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]; //makes a copy of todos\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleAddTodo(eventProperty) {\n    //.current.value is the name of whatever element we are currently referencing\n    const name = nameRef.current.value.trim();\n    nameRef.current.value = null;\n    if (name === '') {\n      return;\n    }\n    // console.log(\"handleAddTodo: setting todo history\");\n    setTodoHistory([...todoHistory, todos]);\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false, selected: false }]\n    })\n\n  }\n\n  function handleClearDoneTodos() {\n    // console.log(\"handleClearDoneTodos: setting todo history\");\n    setTodoHistory([...todoHistory, todos]);\n    const newTodos = todos.filter(todo => !todo.complete);\n    if (todos.length !== newTodos) {\n      setTodos(newTodos);\n    }\n  }\n\n  function handleClearAllTodos() {\n    // console.log(\"handleClearAllTodos: setting todo history\");\n    setTodoHistory([...todoHistory, todos]);\n    setTodos([]);\n  }\n\n  //possible alternatives to onPaste:\n  //https://charles-stover.medium.com/manage-your-customers-clipboard-with-react-hooks-18486220d0d1\n  //https://www.npmjs.com/package/react-use-clipboard\n  function handlePaste() {\n    // console.log(\"pasted to the input\");\n    //the following does not work with the current version of firefox and safari (I think it's because they need permission to read clipboard) BUT works with Chrome (after it asked for permission and I gave it).\n    navigator.clipboard.readText().then(\n      clipText => {\n        addPastedList(clipText);\n        // console.log(\"handlePaste: setting todo history\");\n        setTodoHistory([...todoHistory, todos]);\n      });\n  }\n\n  function addPastedList(clipText) {\n    nameRef.current.value = null;\n    if (clipText.trim() === \"\") {\n      // console.log(\"There was nothing to paste\");\n      return;\n    }\n    //.trim() the string first to remove the last \\n which would otherwise produce an empty string (remove .trim and you'll see)\n    let newTodos;\n    if (clipText.trim().includes(\"\\n\")) {\n      // console.log(\"is separated by new line\");\n      newTodos = clipText.trim().split(\"\\n\");\n    } else { //it's separated by new lines\n      // console.log(\"this one is separated by commas\")\n      newTodos = clipText.trim().split(\",\");\n    }\n    \n    newTodos.forEach( (name) => {\n      setTodos(prevTodos => {\n        return [...prevTodos, { id: uuidv4(), name: name, complete: false, selected: false }]\n      });\n    });\n  }\n\n  function handleCopyList() {\n    const remainingArray = todos.filter(todo => !todo.complete).map(function(todo) {return todo.name});\n    const remainingStr = remainingArray.join(\"\\n\");\n    navigator.clipboard.writeText(remainingStr).then(function() {\n      // console.log(\"successfully copied\");\n    }, function() {\n      // console.log(\"could not copy\");\n    });\n  }\n\n  function selectOnlyThis(todoID = \"none\") {\n    // console.log(\"selectOnlyThis\");\n    const newTodos = [...todos]; //makes a copy of todos\n    for (let i = 0; i < newTodos.length; i++) {\n      if (newTodos[i].id === todoID) {\n        newTodos[i].selected = true;\n      } else {\n        newTodos[i].selected = false;\n      }\n    }\n    setTodos(newTodos);\n  }\n\n  function updateTodo(newName, todo) {\n\n    // console.log(\"updatedTodo: b4, the history length was: \" + todoHistory.length);\n    if (todoHistory.length > 0) {\n      setTodoHistory([...todoHistory, todos]);\n    } else {\n      setTodoHistory([todos]);\n    }\n    // console.log(\"updatedTodo: now, the history length is: \" + todoHistory.length);\n\n    const updatedName = newName.trim();\n    if (updatedName !== todo.name) {\n      let i = 0;\n      while (todos[i].id !== todo.id) {\n        i++;\n      }\n      const isSelected = todos[i].selected;\n      const isComplete = todos.complete;\n      const firstHalf = todos.slice(0, i);\n      const middle = [{ id: uuidv4(), name: updatedName, complete: isComplete, selected: isSelected }];\n      const secondHalf = todos.slice(i+1);\n      // console.log(\"first, middle and second half\");\n      // console.log(firstHalf);\n      // console.log(middle);\n      // console.log(secondHalf);\n      const newTodos = [...firstHalf, ...middle, ...secondHalf];\n      setTodos(newTodos);\n    }\n}\n\n\n  return (\n    <Paper className=\"bg\" style={{backgroundColor: \"rgba(66, 66, 66, 0.9)\"}}>\n      <Grid container direction=\"column\" >\n        <Grid item>\n          <Header todoHistory={todoHistory} setTodoHistory={setTodoHistory} setTodos={setTodos} selectOnlyThis={selectOnlyThis} />\n        </Grid>\n        <Grid item container style={{marginBottom: \"50px\"}}>\n          <Grid item xs={1} sm={2} />\n          <Grid item xs={10} sm={8}>\n            <div style={{display: \"flex\", marginTop: \"5vh\", marginBottom: \"5vh\"}}>\n              <input \n                style={{width: \"65%\", fontSize: \"22px\"}} \n                ref={nameRef} type=\"text\" \n                onPaste={handlePaste}  \n                onKeyDown={(event) => {\n                  if (event.key === 'Enter' || event.key === 'Escape') {\n                    handleAddTodo();\n                }}}\n                />\n              <Button  style={{width: \"35%\"}} variant=\"contained\" color=\"secondary\"  startIcon={<AddIcon />} onClick={handleAddTodo}>Add</Button>\n            </div>\n            \n            <TodoList todos={todos} toggleTodo={toggleTodo} selectOnlyThis={selectOnlyThis}  updateTodo={updateTodo} />\n            <div style={{marginBottom: \"1vh\", marginTop: \"2vh\"}}><Typography>{todos.filter(todo => !todo.complete).length} remaining</Typography></div>   \n            <Button style={{backgroundColor: \"#696969\"}} variant=\"outlined\" onClick={handleCopyList}>Copy Remaining</Button>\n\n  {/* in the options, you can clear all and clear complete items */}\n            <ClearButtons handleClearAllTodos={handleClearAllTodos} handleClearDoneTodos={handleClearDoneTodos} />\n                \n          </Grid>\n          <Grid item xs={1} sm={2} />\n\n        \n        {/* xs={false} is the same as xs={0}, and it means on xtra small screens and up, we take up 0 of the 12 spaces. sm={2} means on small screens and up, we take up 2 of the 12 spaces */}\n          {/* <Grid item xs={false} sm={2} />\n          <Grid item xs={12} sm={8}>\n            <Content />\n          </Grid>\n          <Grid item xs={false} sm={2} />  */}\n        </Grid>\n      </Grid>\n    </Paper>\n    );\n    \n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport pink from '@material-ui/core/colors/pink';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: pink,\n    secondary: blue,\n  },\n});\n\nexport default darkTheme;\n\n// const theme = createMuiTheme({\n//   palette: {\n//     primary: {\n//       main: purple[500],\n//     },\n//     secondary: {\n//       main: green[500],\n//     },\n//   },\n// });\n\n// export default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport darkTheme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={darkTheme}>\n      <App />\n    </ThemeProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}